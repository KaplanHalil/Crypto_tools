

# This file was *autogenerated* from the file MDScheck.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2)
def is_mds(matrix):
    """
    Check if a given matrix is an MDS matrix.
    
    Parameters:
    matrix (Matrix): A SageMath matrix.
    
    Returns:
    bool: True if the matrix is MDS, False otherwise.
    """
    nrows, ncols = matrix.nrows(), matrix.ncols()
    
    if nrows != ncols:
        return False  # MDS matrices must be square
    
    # Check all square submatrices
    for i in range(_sage_const_1 , nrows + _sage_const_1 ):
        for row in range(nrows - i + _sage_const_1 ):
            for col in range(ncols - i + _sage_const_1 ):
                submatrix = matrix.submatrix(row, col, i, i)
                if submatrix.det() == _sage_const_0 :
                    return False
    return True

# Example usage
M = Matrix(GF(_sage_const_2 ), [[_sage_const_1 , _sage_const_0 , _sage_const_1 ], [_sage_const_1 , _sage_const_1 , _sage_const_0 ], [_sage_const_0 , _sage_const_1 , _sage_const_1 ]])
print(is_mds(M))  # Output: True or False



